REFLECT: How did viewing a diff between two versions of a file help you 
see the bug that was introduced?

Using the -u option made the view more compact with + and - to show additions 
and subtractions.


REFLECT: How could having easy access to the entire history of a file make 
you a more efficient programmer in the long term?

When you make a catastrophic mistake, you can revert back.


REFLECT: What do you think are the pros and cons of manually choosing when to 
create a commit, like you do in Git, vs having versions automatically saved, 
like Google Docs does?

Pro: You can commit only code that compiles.  Auto-saving wouldn't do this.
Con: You may do too much if you forget to commit.


REFLECT: Why do you think some version control systems, like Git, allow saving
multiple files in one commit, while others, like Google Docs, treat each file 
separately?

A commit should contain a reasonable amount of work that is related logically.
That work may be in multiple files.  Google Docs are more likely to be edited
one file at a time.


REFLECT: How can you use the commands git log and git diff to view the history 
of files?

git log displays the history of commits
git diff shows the differences between those commits.


REFLECT: How might using version control make you more confident to make 
changes that could break something?

Knowing that I could always go back makes me feel better, but they haven't
taught us how to checkout an older file without losing previous commits from
the log yet.


REFLECT: Now that you have your workspace set up, what do you want to try using 
Git for?

I'm hoping to prepare for a career related to computer science.  This seems 
like a good starting point.
