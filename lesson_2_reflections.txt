REFLECT: What happens when you initialize a repository? Why do you need to do 
it?

It creates a hidden directory called .git.  The commit data needs a place to be
stored.


REFLECT: How is the staging area different from the working directory and the 
repository? What value do you think it offers?

It can contain a subset of files in the working directory.


REFLECT: How can you use the staging area to make sure you have one commit per logical change?

Run git diff --staged to compare the changes in the staging area to the master
commit.


REFLECT: What are some situations when branches would be helpful in keeping 
your history organized? How would branches help?

When you make one or more experimental changes branches would help by 
keeping the changes logically separate.


REFLECT: How do the diagrams help you visualize the branch structure?

They show where branches occurred and which commits are reachable by any head.


REFLECT: What is the result of merging two branches together? Why do we 
represent it in the diagram the way we do?

The changes from both branches are automatically merged together.  The new 
commit has 2 parents.


REFLECT: What are the pros and cons of Gitâ€™s automatic merging vs. always doing 
merges manually?

Automatic merging works well.  Doing the manual merge, I broke the game.  

The class didn't cover what to do if something goes wrong, but I found this:
https://stackoverflow.com/questions/2389361/undo-a-git-merge-that-hasnt-been-pushed-yet
    * git reset --hard commit_sha
    * git reset --hard HEAD~1

When I looked at the merge conflict file again there were two conflicts and I 
had only repaired one. I must have done something wrong earlier in the class to
cause two conflicts.  Anyway I fixed the first one and guessed on the second 
one.  It seems to be working now with easy mode having coins also.

